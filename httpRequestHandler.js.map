{"version":3,"sources":["httpRequestHandler.ts"],"names":[],"mappings":";;;;;;;;;;AAGA,iBAA8B,2BAAwD;;QACpF,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,2FAA2F;QAC3F,MAAM,CAAC,MAAM,2BAA2B,CAAC,MAAM,CAAC;YAC9C,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,iBAAiB;YACtB,IAAI,EAAE,EAAE;YACR,uBAAuB,EAAE,IAAI;YAC7B,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;CAAA;AAfD,0BAeC","file":"httpRequestHandler.js","sourcesContent":["import {RequestResponse} from \"request\";\nimport {RequestPromiseNativeWrapper} from \"./RequestPromiseNativeWrapper\";\n\nexport async function handler(requestPromiseNativeWrapper: RequestPromiseNativeWrapper): Promise<RequestResponse> {\n  console.log(\"1...\");\n  console.log(\"2...\");\n  console.log(\"3...\");\n  console.log(\"4...\");\n  console.log(\"5...\");\n  // const logicAppResponse: RequestResponse = TypeMoq.Mock.ofType<RequestResponse>().object;\n  return await requestPromiseNativeWrapper.doExec({\n    method: \"POST\",\n    uri: \"https://aaa.bbb\",\n    body: {},\n    resolveWithFullResponse: true,\n    simple: false,\n    json: true,\n  });\n}\n\n"]}