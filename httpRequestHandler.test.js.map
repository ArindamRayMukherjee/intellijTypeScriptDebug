{"version":3,"sources":["httpRequestHandler.test.ts"],"names":[],"mappings":";;;;;;;;;;AACA,mCAAmC;AACnC,6DAA6C;AAG7C,IAAI,CAAC,iBAAiB,EAAE,GAAS,EAAE;IACjC,MAAM,+BAA+B,GACjC,OAAO,CAAC,IAAI,CAAC,MAAM,EAA+B,CAAC;IACvD,MAAM,mBAAmB,GAAmC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAmB,CAAC;IACnG,mBAAmB;SAChB,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC;SAC1B,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IACtB,mBAAmB;SAChB,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;SACpB,OAAO,CAAC,GAAG,EAAE;QACZ,MAAM,CAAC;YACL,OAAO,EAAE,SAAS;SACnB,CAAC;IACJ,CAAC,CAAC,CAAC;IACL,+BAA+B;SAC5B,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;SAC1C,OAAO,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9D,MAAM,QAAQ,GAAG,MAAM,4BAAO,CAAC,+BAA+B,CAAC,MAAM,CAAC,CAAC;IACvE,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAE,SAAS,CAAC,CAAC;AACjD,CAAC,CAAA,CAAC,CAAC","file":"httpRequestHandler.test.js","sourcesContent":["import {RequestResponse} from \"request\";\nimport * as TypeMoq from \"typemoq\";\nimport {handler} from \"./httpRequestHandler\";\nimport {RequestPromiseNativeWrapper} from \"./RequestPromiseNativeWrapper\";\n\ntest(\"happy flow POST\", async () => {\n  const mockRequestPromiseNativeWrapper: TypeMoq.IMock<RequestPromiseNativeWrapper>\n    = TypeMoq.Mock.ofType<RequestPromiseNativeWrapper>();\n  const mockRequestResponse: TypeMoq.IMock<RequestResponse> = TypeMoq.Mock.ofType<RequestResponse>();\n  mockRequestResponse\n    .setup((x) => x.statusCode)\n    .returns(() => 200);\n  mockRequestResponse\n    .setup((x) => x.body)\n    .returns(() => {\n      return {\n        account: \"account\",\n      };\n    });\n  mockRequestPromiseNativeWrapper\n    .setup((x) => x.doExec(TypeMoq.It.isAny()))\n    .returns(() => Promise.resolve(mockRequestResponse.object));\n  const response = await handler(mockRequestPromiseNativeWrapper.object);\n  expect(response.statusCode).toBe(200);\n  expect(response.body.account).toBe( \"account\");\n});\n"]}